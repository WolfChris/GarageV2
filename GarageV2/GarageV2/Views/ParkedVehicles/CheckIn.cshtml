@model GarageV2.ViewModels.CheckInViewModel

@{
    ViewBag.Title = "Checka in";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Parkera Fordon</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Member.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.MemberId, Model.Members,  htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Member.FullName)
                @Html.ValidationMessageFor(model => model.Member.FullName, "", new { @class = "text-danger" })
                @Html.ActionLink("Registrera ny", "Create","Members")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleType.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(model => model.VehicleTypeId, Model.VehicleTypes, htmlAttributes : new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.VehicleType.Name)
                @Html.ValidationMessageFor(model => model.VehicleType.Name, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfWheels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfWheels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfWheels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Checka in" class="btn btn-default" />
                
            </div>
        </div>
    </div>
                    }



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
